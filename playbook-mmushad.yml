---

- name: Deploy a web application
  hosts: slave1,slave2
  become: true
  vars:
    mysql_root: "rootmysql"

  tasks:
    - name: Install all required dependencices
      apt: name={{ item }} state=present
      with_items:
         - python
         - python-setuptools
         - python-dev
         - build-essential
         - python-pip
         - python3-pip
         - python-mysqldb

    - name: Specify MySQL root password before installing
      # without this, auth_socket will be used for root@localhost, and we won't be able to set the password
      debconf: name='mysql-server' question='mysql-server/root_password' value='{{mysql_root | quote}}' vtype='password'
 

    - name: Confirm MySQL root password before installing
      debconf: name='mysql-server' question='mysql-server/root_password_again' value='{{mysql_root | quote}}' vtype='password'


    - name: Install MySQL database
      apt: name={{ item }} state=present
      with_items:
         - mysql-server
         - mysql-client

    - name: install PyMYSQL on remote to permit managing MySQL/MariaDB via ansible
      pip:
         name: ['PyMYSQL', 'pexpect']
         state: present


    - name: Start MySQL database service
      service:
        name: mysql 
        state: started
        enabled: yes
     

    - name: create /root/.my.cnf (from template) with password credentials
      template: src=root/.my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600
    - name: Change root user password on first run
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root }}"
        check_implicit_admin: yes
        ####A preciser le socket, surtout avec MariaDB 10.3.2
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: root
        password: "{{ mysql_root }}"
        host: "{{ item }}"
      with_items:
        - "{{ ansible_nodename }}"
        - 127.0.0.1
        - ::1
        - localhost

      
    - name: Create Application database
      mysql_db: 
         login_user: root
         login_password: "{{ mysql_root }}"
         login_unix_socket: /var/run/mysqld/mysqld.sock
         name: employee_db 
         state: present
         login_host: '%'
          
    - name: Create database user
      mysql_user: 
        login_user: root
        login_password: rootmysql
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: db_user
        password: Passw0rd
        priv: '*.*:ALL'
        state: present
        login_host: '%'


    - name: Install Python Flask dependencies
      pip: 
        name: "{{ item }}"
        state: present
      with_items:
         - flask
         - flask-mysql

    - name: Copy source code
      copy: src=app.py dest=/opt/app.py
    
    - name: Echo my_env_var
      shell: "echo $FLASK_APP"
      environment:
        FLASK_APP: /opt/app.py

    - name: Echo FLASK_APP value
      shell: "echo $FLASK_APP"

    - name: set FLASK_APP variable
      shell: "export FLASK_APP=/opt/app.py"
    
    - name: Start Web server
      shell: flask run --host=0.0.0.0 &


